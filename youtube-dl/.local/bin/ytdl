#!/bin/sh

# YTDL
# Simon Hugh Moore
#
# A wrapper around youtube-dl to manage separate configs, queue downloads with
# task-spooler, notify when the download is finished and keep a history log

__usage="
Usage: $(basename "$0") [OPTIONS]
Download video or playlist, with or without notifications
Any argument starting with 'http' will be accepted as URL

Options:
  -t, --ts                                   Call task spooler
  -v, --video                                Download single video
  -q, --hq                                   Download single high quality video
  -a, --audio                                Download audio only
  -p, --playlist                             Download playlist
  -s, --slow                                 Don't use aria2
  -u, --url=url                              URL to download
  -H|--history                               Print download history
  -F|--failed                                Print failed download history
  -h, --help                                 Print this help message
"

_dependency(){ command -v "$1" > /dev/null || { echo "error: "$1" not found"; exit 1; }; }
_dependency "youtube-dl"
_dependency "ts"

# Runtime
runtime_dir=$XDG_RUNTIME_DIR/ytdl
history=$runtime_dir/history.download
failed_history=$runtime_dir/history.failed
mkdir -p $runtime_dir

# Task Spooler
export TMPDIR=$runtime_dir/ts
mkdir -p $TMPDIR
ts -S 4

config_dir=$XDG_CONFIG_HOME/youtube-dl
video_config=$config_dir/config
hq_config=$config_dir/hq.config
playlist_config=$config_dir/pl.config
slow_config=$config_dir/slow.config
audio_config=$config_dir/audio.config
config=$video_config

_get_title(){
    # if failed, return url
    youtube-dl --get-title "$1" 2>/dev/null || echo "$1"
}

_download(){ 
    title="$( _get_title "$url" )"
    notify-send 'Added Download to queu...' ''"$title"''

    # title with ' escaped 
    etitle="$( echo "$title" | sed "s/'/'\"'\"'/g" )"
    msg="$( printf "%s\t%s" "$url" "$etitle" )"

    # Use printf to allow the use of ' to protect against command injection
    cmd="$( printf "youtube-dl --config-location '%s' --exec \"ffmpeg -i {} -c:v copy -c:a copy -metadata URL='%s' {}.tmp.mkv;mv -f {}.tmp.mkv {}\" '%s' || ( notify-send 'Failed to download!' '%s'; echo '%s' >> %s; exit 1 )" "$config" "$url" "$url" "$etitle" "$msg" "$failed_history" )"
    ts -L ytdl sh -c "$cmd"

    ts -d -L ytdl notify-send 'Finished Download!' ''"$title"''
    ts -d -L ytdl sh -c "echo '$msg' >> $history"
    exit
}


while test $# -gt 0; do
    case "$1" in
        -h|--help) echo "$__usage"; exit ;;
        -t|--ts) shift; ts $@; exit;;
        -H|--history) cat "$history"; exit;;
        -F|--failed) cat "$failed_history"; exit;;
        -v|--video) config=$video_config ;;
        -q|--hq) config=$hq_config ;;
        -a|--audio) config=$audio_config ;;
        -p|--playlist) config=$playlist_config ;;
        -s|--slow) config=$slow_config ;;
        -u) shift; url="$1" ;;
        --url=*) url=${1#*=} ;;
        http*) url="$1" ;;
        *) arg="$arg $1" ;;
    esac
    shift
done
_download "$arg"
