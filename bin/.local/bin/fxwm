#!/bin/sh

# FXWM
# Simon Hugh Moore
#
# A pseudo window manager using fzf
# Switch, move and delete windows, desktops and monitors

export DISPLAY=:0

_dependency(){ command -v "$1" > /dev/null || { echo "error: "$1" not found"; exit 1; }; }
_dependency "wmctrl"
_dependency "xrandr"
_dependency "xdotool"

__usage="usage: $(basename "$0") [OPTIONS]"
__help="$__usage

FZF X Window Manager
Control and manage X windows, desktops and monitors with FZF

Options:
  window [OPTIONS]                   Manage windows in FZF, the default option
  desktop                            Manage desktops in FZF
  monitor                            Manage monitors in FZF
  -h, --help                         Print this help message
"

_window(){
    # get a list of windows including the desktop name for each window
    windows="$( wmctrl -lxpG | sed "$( wmctrl -d | sed 's|[[:space:]].*[[:space:]]|[[:space:]]/\&|;s|.*|s/^0x[0-9a-z]*[[:space:]][[:space:]]*& /;|' )" )"

    if [ "$1" = "-c" ]; then
        current_desktop="$( wmctrl -d | grep '*' | cut -d' ' -f1 )"
        windows="$( echo "$windows" | grep "^0x[^ ]*[[:space:]][[:space:]]*$current_desktop[[:space:]].*$" )"
    fi

    choice="$( echo "$windows" | fzf --with-nth=3,11.. --expect='alt-q,alt-Q,alt-h,alt-f,alt-m,alt-t,alt-T,alt-c,alt-w,alt-p,alt-d,alt-D,alt-a' )"
    key="$( echo "$choice" | head -n1 )"
    window="$( echo "$choice" | tail -n1 )"

    case "$key" in
        alt-q) wmctrl -ic "$window" ;; # Close the window
        alt-Q) kill -s 9 "$( echo "$window" | awk '{print $3}' )" ;; # Kill the window
        alt-h) wmctrl -ir "$window" -b "toggle,hidden" ;; # Hide the window
        alt-f) wmctrl -ir "$window" -b "toggle,fullscreen" ;; # Switch window to fullscreen
        alt-m) wmctrl -iR "$window" ;; # Move the window to the current desktop
        alt-T) wmctrl -ir "$window" -T "$( echo "" | fzf --print-query --prompt="Title: " --pointer=" " )" ;; # Change the window title
        alt-t) echo "$window" | awk '{for(i=11;i<=NF;i++) printf $i" "; print ""}' ;; # Print window title to stdout
        alt-c) echo "$window" | awk '{ print $9 }' ;; # Print window class to stdout
        alt-w) echo "$window" | awk '{ print $1 }' ;; # Print window ID to stdout
        alt-p) echo "$window" | awk '{ print $4 }' ;; # Print process ID to stdout
        alt-d) echo "$window" | awk '{ print $3 }' ;; # Print desktop name of window to stdout
        alt-D) echo "$window" | awk '{ print $2 }' ;; # Print desktop number of window to stdout
        alt-a) echo "$window" ;; # Print all window data
        *) wmctrl -ia "$window" ;; # Switch to desktop containing window and focus
    esac
}

_desktop(){
    choice="$( wmctrl -d | fzf --with-nth=9 --expect='alt-d,alt-D,alt-a,alt-m' )"
    key="$( echo "$choice" | head -n1 )"
    desktop="$( echo "$choice" | tail -n1 )"

    case "$key" in
        alt-d) echo "$desktop" | awk '{ print $9 }' ;; # Print desktop name to stdout
        alt-D) echo "$desktop" | awk '{ print $1 }' ;; # Print desktop number to stdout
        alt-a) echo "$desktop" ;; # Print all desktop data
        alt-m) wmctrl -ir "$( xdotool getwindowfocus )" -t "$desktop" ;; # Move focused window to desktop
        *) wmctrl -s "$desktop" ;; # Switch to desktop
    esac
}

# TODO: present list of monitors in fzf
_monitor(){
    xrandr --listmonitors
}

case "$1" in
    -h|--help) echo "$__help"; exit ;;
    window) shift; _window "$@" ;;
    desktop) shift; _desktop "$@" ;;
    monitor) shift; _monitor "$@" ;;
    *) _window "$@" ;;
esac
